{
  "name": "Basic Voice Agent",
  "description": "Simple Node.js voice agent with ElevenLabs integration",
  "category": "basic",
  "language": "javascript",
  "framework": "vanilla",
  "features": [
    "Text-to-speech synthesis",
    "Voice parameter tuning",
    "Audio file generation",
    "Error handling",
    "Configuration management"
  ],
  "requirements": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "installDependencies": false,
  "additionalFiles": [
    {
      "path": "src/voice-agent.js",
      "content": "// Voice Agent Implementation\n// Generated by eleven-cursor CLI\n\nconst { ElevenLabsClient } = require('elevenlabs');\n\nclass VoiceAgent {\n  constructor(config) {\n    this.client = new ElevenLabsClient({ apiKey: config.apiKey });\n    this.voiceId = config.voiceId;\n    this.settings = config.settings;\n  }\n\n  async speak(text, options = {}) {\n    try {\n      const audio = await this.client.generate({\n        voice: this.voiceId,\n        text: text,\n        voice_settings: { ...this.settings, ...options.settings }\n      });\n      \n      return audio;\n    } catch (error) {\n      throw new Error(`Voice synthesis failed: ${error.message}`);\n    }\n  }\n\n  updateSettings(newSettings) {\n    this.settings = { ...this.settings, ...newSettings };\n  }\n}\n\nmodule.exports = VoiceAgent;"
    }
  ]
}